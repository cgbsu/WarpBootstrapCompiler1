[1/2] Building CXX object CMakeFiles/warp_compiler.dir/Compiler/Main.cpp.o
FAILED: CMakeFiles/warp_compiler.dir/Compiler/Main.cpp.o 
ccache /usr/bin/c++  -I/root/.conan/data/ctpg/1.3.7/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include -I/root/.conan/data/ctre/3.7/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include -I/root/.conan/data/cpputest/4.0/_/_/package/7f06ab4d29b1f14af224d13dc05f362c6832ed41/include -I/root/.conan/data/matchit/1.0.1/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include -I/root/.conan/data/llvm-core/13.0.0/_/_/package/6efbb14f313e71b5e1dbf77c1c011f47614b7c7c/include -I/root/.conan/data/li<..._TRUNCATED_...>29b1f14af224d13dc05f362c6832ed41/include -I/root/.conan/data/matchit/1.0.1/_/_/package/5ab84d6acfe1f23c4fae0ab88f26e3a396351ac9/include -I/root/.conan/data/llvm-core/13.0.0/_/_/package/6efbb14f313e71b5e1dbf77c1c011f47614b7c7c/include -I/root/.conan/data/libxml2/2.9.10/_/_/package/c4a7cacf01760cbd7354b11a55bf653f7df2bf5d/include -I/root/.conan/data/libxml2/2.9.10/_/_/package/c4a7cacf01760cbd7354b11a55bf653f7df2bf5d/include/libxml2 -I/root/.conan/data/zlib/1.2.12/_/_/package/2a19826344ff00be1c04403f2f8e7008ed3a7cc6/include -I/root/.conan/data/libiconv/1.17/_/_/package/2a19826344ff00be1c04403f2f8e7008ed3a7cc6/include -I/root/workdir/Include -fconstexpr-ops-limit=3355443299 -fconstexpr-depth=1280 -fconcepts-diagnostics-depth=2 -ftemplate-depth=10000 -frounding-math -DLIBXML_STATIC -std=gnu++23 -MD -MT CMakeFiles/warp_compiler.dir/Compiler/Main.cpp.o -MF CMakeFiles/warp_compiler.dir/Compiler/Main.cpp.o.d -o CMakeFiles/warp_compiler.dir/Compiler/Main.cpp.o -c /root/workdir/Compiler/Main.cpp
In file included from /root/workdir/Include/Warp/SyntaxTranslation/LLVM/Translators/LiteralTranslator.hpp:1,
                 from /root/workdir/Compiler/Main.cpp:3:
/root/workdir/Include/Warp/SyntaxTranslation/LLVM/Compile.hpp: In instantiation of ‘Warp::SyntaxTranslation::LLVM::translate<Warp::SyntaxTranslation::LLVM::Target::LLVM, llvm::Value*, Warp::Runtime::Compiler::Context<std::unique_ptr<Warp::Utilities::AnyBase>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::__c<..._TRUNCATED_...>e>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::__cxx11::basic_string<char>, std::unordered_map> >(Context&, const Warp::Runtime::Compiler::Context<std::unique_ptr<Warp::Utilities::AnyBase>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::__cxx11::basic_string<char>, std::unordered_map>*, const Warp::SyntaxAnalysis::SyntaxTree::BaseNode&, bool)::<lambda(auto:439, const auto:440*, Warp::SyntaxTranslation::LLVM::Context&, bool)> [with auto:439 = const Warp::SyntaxAnalysis::SyntaxTree::Node<Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralWhole>*; auto:440 = Warp::Runtime::Compiler::Context<std::unique_ptr<Warp::Utilities::AnyBase>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::__cxx11::basic_string<char>, std::unordered_map>]’:
/root/workdir/Include/Warp/Utilities/VariantView.hpp:108:19:   recursively required from ‘std::optional<_Tp> Warp::Utilities::visit_implementation(Warp::size_t, const VariantView<BaseParameterType, ChildParameterTemplate, AllAlternativeTagParameterConstants ...>&, auto:98 ...) [with ReturnParameterType = llvm::Value*; auto VisitorParameterConstant = <lambda closure object>Warp::SyntaxTranslation::LLVM::translate<Warp::SyntaxTranslation::LLVM::Target::LLVM, llvm::Value*, Warp::Runtime::Compiler::Context<std:<..._TRUNCATED_...>s ...>&, auto:98 ...) [with ReturnParameterType = llvm::Value*; auto VisitorParameterConstant = <lambda closure object>Warp::SyntaxTranslation::LLVM::translate<Warp::SyntaxTranslation::LLVM::Target::LLVM, llvm::Value*, Warp::Runtime::Compiler::Context<std::unique_ptr<Warp::Utilities::AnyBase>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::__cxx11::basic_string<char>, std::unordered_map> >(Context&, const Warp::Runtime::Compiler::Context<std::unique_ptr<Warp::Utilities::AnyBase>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode>, std::__cxx11::basic_string<char>, std::unordered_map>*, const Warp::SyntaxAnalysis::SyntaxTree::BaseNode&, bool)::<lambda(auto:439, const auto:440*, Warp::SyntaxTranslation::LLVM::Context&, bool)>(); BaseParameterType = Warp::SyntaxAnalysis::SyntaxTree::BaseNode; ChildParameterTemplate = Warp::SyntaxAnalysis::SyntaxTree::Node; auto CurrentAlternativeParameterConstant = Warp::SyntaxAnalysis::SyntaxTree::NodeType::Divide; auto ...AlternativeTagParameterConstants = {Warp::SyntaxAnalysis::SyntaxTree::NodeType::Add, Warp::SyntaxAnalysis::SyntaxTree::NodeType::Subtract, Warp::SyntaxAnalysis::SyntaxTree::NodeType::Negation, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralWhole, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralInteger, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralCharacter, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralFixed, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralBool, Warp::SyntaxAnalysis::SyntaxTree::NodeType::Expression, Warp::SyntaxAnalysis::SyntaxTree::NodeType::ConstantCall, Warp::SyntaxAnalysis::SyntaxTree::NodeType::GreaterThan, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LessThan, Warp::SyntaxAnalysis::SyntaxTree::NodeType::GreaterThanOrEqualTo, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LessThankOrEqualTo, Warp::SyntaxAnalysis::SyntaxTree::NodeType::Equal, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LogicalAnd, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LogicalOr, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LogicalNot, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LogicalExpression, Warp::SyntaxAnalysis::SyntaxTree::NodeType::FunctionCall}; auto ...AllAlternativeTagParameterConstants = {Warp::SyntaxAnalysis::SyntaxTree::NodeType::Multiply, Warp::SyntaxAnalysis::SyntaxTree::NodeType::Divide, Warp::SyntaxAnalysis::SyntaxTree::NodeType::Add, Warp::SyntaxAnalysis::SyntaxTree::NodeType::Subtract, Warp::SyntaxAnalysis::SyntaxTree::NodeType::Negation, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralWhole, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralInteger, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralCharacter, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralFixed, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LiteralBool, Warp::SyntaxAnalysis::SyntaxTree::NodeType::Expression, Warp::SyntaxAnalysis::SyntaxTree::NodeType::ConstantCall, Warp::SyntaxAnalysis::SyntaxTree::NodeType::GreaterThan, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LessThan, Warp::SyntaxAnalysis::SyntaxTree::NodeType::GreaterThanOrEqualTo, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LessThankOrEqualTo, Warp::SyntaxAnalysis::SyntaxTree::NodeType::Equal, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LogicalAnd, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LogicalOr, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LogicalNot, Warp::SyntaxAnalysis::SyntaxTree::NodeType::LogicalExpression, Warp::SyntaxAnalysis::SyntaxTree::NodeType::FunctionCall}; auto:98 = {const Warp::Runtime::Compiler::Context<std::unique_ptr<AnyBase, std::default_delete<AnyBase> >, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode, std::default_delete<Warp::SyntaxAnalysis::SyntaxTree::BaseNode> >, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode, std::default_delete<Warp::SyntaxAnalysis::SyntaxTree::BaseNode> >, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode, std::default_delete<Warp::SyntaxAnalysis::SyntaxTree::BaseNode> >, std::unique_ptr<Warp::SyntaxAnalysis::SyntaxTree::BaseNode, std::default_delete<Warp::SyntaxAnalysis::SyntaxTree::BaseNode> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unordered_map>*, Warp::SyntaxTranslation::LLVM::Context, bool}; Warp::size_t = long unsigned int]’
